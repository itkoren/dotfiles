{{- if and (eq .chezmoi.os "darwin") (hasKey .packages "darwin") -}}
#!{{ lookPath "sh" }}

{{ if hasKey .packages.darwin "universal" }}

# Generate the Brewfile content dynamically and store it in a variable
brewfile_content=$(cat <<EOF
{{ range .packages.darwin.universal.taps -}}
tap {{ . | quote }}
{{ end -}}

{{ range .packages.darwin.universal.brews -}}
brew {{ . | quote }}
{{ end -}}

{{ if .packages.darwin.universal.brewcasks }}
{{ range .packages.darwin.universal.casks -}}
cask {{ . | quote }}
{{ end -}}

{{ range .packages.darwin.universal.mas -}}
mas {{ .name | quote }}, id: {{ .id }}
{{ end -}}
{{ end }}
EOF
)

# Step 1: Check if all packages are already installed using `brew bundle check`
echo "$brewfile_content" | brew bundle check --no-lock --file=/dev/stdin

# Step 2: If some packages are missing, install them
if [[ $? -ne 0 ]]; then
    echo "$brewfile_content" | brew bundle --no-lock --file=/dev/stdin
fi

{{ end }}


{{ if and (.environment.work) (hasKey .packages.darwin "work") }}
HOMEBREW_GITHUB_API_TOKEN='{{ onepasswordRead "op://jdc3emtdvytbu3zz7q3iebne4q/6gs2v2ehe4k74q6u3yez4b65ii/password" "C4SXB3KJ45CXLDMVFFD3WPQC7U" }}'

# Generate the Brewfile content dynamically for work and store it in a variable
brewfile_content=$(cat <<EOF
{{ range .packages.darwin.work.taps -}}
tap {{ . | quote }}
{{ end -}}

{{ range .packages.darwin.work.brews -}}
brew {{ . | quote }}
{{ end -}}

{{ if .packages.darwin.work.brewcasks }}
{{ range .packages.darwin.work.casks -}}
cask {{ . | quote }}
{{ end -}}

{{ range .packages.darwin.work.mas -}}
mas {{ .name | quote }}, id: {{ .id }}
{{ end -}}
{{ end }}
EOF
)

# Step 1: Check if all packages are already installed using `brew bundle check`
echo "$brewfile_content" | brew bundle check --no-lock --file=/dev/stdin

# Step 2: If some packages are missing, install them
if [[ $? -ne 0 ]]; then
    echo "$brewfile_content" | brew bundle --no-lock --file=/dev/stdin
fi

{{ end }}


{{ if and (.environment.personal) (hasKey .packages.darwin "personal") }}
HOMEBREW_GITHUB_API_TOKEN='{{ onepasswordRead "op://jdc3emtdvytbu3zz7q3iebne4q/6gs2v2ehe4k74q6u3yez4b65ii/password" "C4SXB3KJ45CXLDMVFFD3WPQC7U" }}'

# Generate the Brewfile content dynamically for personal and store it in a variable
brewfile_content=$(cat <<EOF
{{ range .packages.darwin.personal.taps -}}
tap {{ . | quote }}
{{ end -}}

{{ range .packages.darwin.personal.brews -}}
brew {{ . | quote }}
{{ end -}}

{{ if .packages.darwin.personal.brewcasks }}
{{ range .packages.darwin.personal.casks -}}
cask {{ . | quote }}
{{ end -}}

{{ range .packages.darwin.personal.mas -}}
mas {{ .name | quote }}, id: {{ .id }}
{{ end -}}
{{ end }}
EOF
)

# Step 1: Check if all packages are already installed using `brew bundle check`
echo "$brewfile_content" | brew bundle check --no-lock --file=/dev/stdin

# Step 2: If some packages are missing, install them
if [[ $? -ne 0 ]]; then
    echo "$brewfile_content" | brew bundle --no-lock --file=/dev/stdin
fi

{{ end }}


{{ end }}
